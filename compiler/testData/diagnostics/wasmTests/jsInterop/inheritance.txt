package

public open class A {
    public constructor A()
    invisible_fake final override /*1*/ /*fake_override*/ var _hashCode: kotlin.Int
    invisible_fake final override /*1*/ /*fake_override*/ var typeInfo: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open external class B {
    public constructor B()
    invisible_fake final override /*1*/ /*fake_override*/ var _hashCode: kotlin.Int
    invisible_fake final override /*1*/ /*fake_override*/ var typeInfo: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final external class C : A {
    public constructor C()
    invisible_fake final override /*1*/ /*fake_override*/ var _hashCode: kotlin.Int
    invisible_fake final override /*1*/ /*fake_override*/ var typeInfo: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final external class D : B, I {
    public constructor D()
    invisible_fake final override /*2*/ /*fake_override*/ var _hashCode: kotlin.Int
    invisible_fake final override /*2*/ /*fake_override*/ var typeInfo: kotlin.Int
    public open override /*2*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*2*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*2*/ /*fake_override*/ fun toString(): kotlin.String
}

public final external enum class E : kotlin.Enum<E> {
    enum entry X

    private constructor E()
    invisible_fake final override /*1*/ /*fake_override*/ var _hashCode: kotlin.Int
    public final override /*1*/ /*fake_override*/ val name: kotlin.String
    public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
    invisible_fake final override /*1*/ /*fake_override*/ var typeInfo: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: E): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public final /*synthesized*/ val entries: kotlin.enums.EnumEntries<E>
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): E
    public final /*synthesized*/ fun values(): kotlin.Array<E>
}

public final external enum class F : kotlin.Enum<F>, I {
    enum entry X

    private constructor F()
    invisible_fake final override /*2*/ /*fake_override*/ var _hashCode: kotlin.Int
    public final override /*1*/ /*fake_override*/ val name: kotlin.String
    public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
    invisible_fake final override /*2*/ /*fake_override*/ var typeInfo: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: F): kotlin.Int
    public open override /*2*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*2*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*2*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public final /*synthesized*/ val entries: kotlin.enums.EnumEntries<F>
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): F
    public final /*synthesized*/ fun values(): kotlin.Array<F>
}

public interface I {
    invisible_fake final override /*1*/ /*fake_override*/ var _hashCode: kotlin.Int
    invisible_fake final override /*1*/ /*fake_override*/ var typeInfo: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public external interface K : I {
    invisible_fake final override /*1*/ /*fake_override*/ var _hashCode: kotlin.Int
    invisible_fake final override /*1*/ /*fake_override*/ var typeInfo: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

