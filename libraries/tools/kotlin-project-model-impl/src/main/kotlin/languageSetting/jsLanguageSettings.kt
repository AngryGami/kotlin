/*
 * Copyright 2010-2021 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.project.modelx.languageSetting

import org.jetbrains.kotlin.cli.common.arguments.K2JSCompilerArguments
import org.jetbrains.kotlin.js.config.EcmaVersion
import org.jetbrains.kotlin.serialization.js.ModuleKind

val jsLanguageSettings: Map<String, SimpleLanguageSetting<*, *>> = listOf(
    SimpleLanguageSetting<K2JSCompilerArguments, String>(
        key = "js-target",
        description = "Generate source map",
        consistencyRule = ConsistencyRelation.MonotonicAsc(
            comparator = compareBy { EcmaVersion.valueOf(it) }
        ),
        contributor = { target = it },
        serializer = StringSerializer
    ),
    SimpleLanguageSetting<K2JSCompilerArguments, ModuleKind>(
        key = "module-kind",
        description = "Kind of the JS module generated by the compiler",
        consistencyRule = ConsistencyRelation.Constant,
        contributor = {
            // TODO: this is problematic
            moduleKind = when (it) {
                ModuleKind.PLAIN -> "plain"
                ModuleKind.AMD -> "amd"
                ModuleKind.COMMON_JS -> "commonjs"
                ModuleKind.UMD -> "umd"
            }
        },
        serializer = EnumSerializer()
    ),
    SimpleLanguageSetting<K2JSCompilerArguments, String>(
        key = "module-kind-string",
        description = "String version of module-kind",
        consistencyRule = ConsistencyRelation.Constant,
        contributor = { moduleKind = it },
        serializer = StringSerializer
    ),
    SimpleLanguageSetting<K2JSCompilerArguments, Boolean>(
        key = "source-map",
        description = "Generate source map",
        consistencyRule = ConsistencyRelation.DontCare,
        contributor = { sourceMap = it },
        serializer = BoolSerializer
    ),
).associateBy { it.key }