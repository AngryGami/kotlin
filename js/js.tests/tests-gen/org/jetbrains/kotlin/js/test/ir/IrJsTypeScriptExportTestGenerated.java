/*
 * Copyright 2010-2021 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.js.test.ir;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link GenerateNewCompilerTests.kt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("js/js.translator/testData/typescript-export")
@TestDataPath("$PROJECT_ROOT")
public class IrJsTypeScriptExportTestGenerated extends AbstractIrJsTypeScriptExportTest {
    @Test
    public void testAllFilesPresentInTypescript_export() throws Exception {
        KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/abstract-classes")
    @TestDataPath("$PROJECT_ROOT")
    public class Abstract_classes {
        @Test
        public void testAllFilesPresentInAbstract_classes() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/abstract-classes"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/abstract-classes-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Abstract_classes_in_exported_file {
        @Test
        public void testAllFilesPresentInAbstract_classes_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/abstract-classes-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/classes")
    @TestDataPath("$PROJECT_ROOT")
    public class Classes {
        @Test
        public void testAllFilesPresentInClasses() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/classes"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("inner-class.kt")
        public void testInner_class() throws Exception {
            runTest("js/js.translator/testData/typescript-export/classes/inner-class.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/constructors")
    @TestDataPath("$PROJECT_ROOT")
    public class Constructors {
        @Test
        public void testAllFilesPresentInConstructors() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/constructors"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("constructors.kt")
        public void testConstructors() throws Exception {
            runTest("js/js.translator/testData/typescript-export/constructors/constructors.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/constructors-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Constructors_in_exported_file {
        @Test
        public void testAllFilesPresentInConstructors_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/constructors-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/data-classes")
    @TestDataPath("$PROJECT_ROOT")
    public class Data_classes {
        @Test
        public void testAllFilesPresentInData_classes() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/data-classes"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/data-classes-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Data_classes_in_exported_file {
        @Test
        public void testAllFilesPresentInData_classes_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/data-classes-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/declarations")
    @TestDataPath("$PROJECT_ROOT")
    public class Declarations {
        @Test
        public void testAllFilesPresentInDeclarations() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/declarations"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("declarations.kt")
        public void testDeclarations() throws Exception {
            runTest("js/js.translator/testData/typescript-export/declarations/declarations.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/enum-classes")
    @TestDataPath("$PROJECT_ROOT")
    public class Enum_classes {
        @Test
        public void testAllFilesPresentInEnum_classes() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/enum-classes"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/enum-classes-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Enum_classes_in_exported_file {
        @Test
        public void testAllFilesPresentInEnum_classes_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/enum-classes-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/escapedDeclarations")
    @TestDataPath("$PROJECT_ROOT")
    public class EscapedDeclarations {
        @Test
        public void testAllFilesPresentInEscapedDeclarations() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/escapedDeclarations"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("escapedDeclarations.kt")
        public void testEscapedDeclarations() throws Exception {
            runTest("js/js.translator/testData/typescript-export/escapedDeclarations/escapedDeclarations.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/escaped-declarations")
    @TestDataPath("$PROJECT_ROOT")
    public class Escaped_declarations {
        @Test
        public void testAllFilesPresentInEscaped_declarations() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/escaped-declarations"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/escaped-declarations-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Escaped_declarations_in_exported_file {
        @Test
        public void testAllFilesPresentInEscaped_declarations_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/escaped-declarations-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/excluded-exported-declarations")
    @TestDataPath("$PROJECT_ROOT")
    public class Excluded_exported_declarations {
        @Test
        public void testAllFilesPresentInExcluded_exported_declarations() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/excluded-exported-declarations"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/excluded-exported-declarations-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Excluded_exported_declarations_in_exported_file {
        @Test
        public void testAllFilesPresentInExcluded_exported_declarations_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/excluded-exported-declarations-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/functions")
    @TestDataPath("$PROJECT_ROOT")
    public class Functions {
        @Test
        public void testAllFilesPresentInFunctions() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/functions"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/functions-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Functions_in_exported_file {
        @Test
        public void testAllFilesPresentInFunctions_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/functions-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/implicitExport")
    @TestDataPath("$PROJECT_ROOT")
    public class ImplicitExport {
        @Test
        public void testAllFilesPresentInImplicitExport() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/implicitExport"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("declarations.kt")
        public void testDeclarations() throws Exception {
            runTest("js/js.translator/testData/typescript-export/implicitExport/declarations.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/implicit-export")
    @TestDataPath("$PROJECT_ROOT")
    public class Implicit_export {
        @Test
        public void testAllFilesPresentInImplicit_export() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/implicit-export"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/inheritance")
    @TestDataPath("$PROJECT_ROOT")
    public class Inheritance {
        @Test
        public void testAllFilesPresentInInheritance() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/inheritance"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("inheritance.kt")
        public void testInheritance() throws Exception {
            runTest("js/js.translator/testData/typescript-export/inheritance/inheritance.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/inner-classes")
    @TestDataPath("$PROJECT_ROOT")
    public class Inner_classes {
        @Test
        public void testAllFilesPresentInInner_classes() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/inner-classes"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/inner-classes-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Inner_classes_in_exported_file {
        @Test
        public void testAllFilesPresentInInner_classes_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/inner-classes-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/interfaces")
    @TestDataPath("$PROJECT_ROOT")
    public class Interfaces {
        @Test
        public void testAllFilesPresentInInterfaces() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/interfaces"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/interfaces-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Interfaces_in_exported_file {
        @Test
        public void testAllFilesPresentInInterfaces_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/interfaces-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/js-name")
    @TestDataPath("$PROJECT_ROOT")
    public class Js_name {
        @Test
        public void testAllFilesPresentInJs_name() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/js-name"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/js-name-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Js_name_in_exported_file {
        @Test
        public void testAllFilesPresentInJs_name_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/js-name-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/member-properties")
    @TestDataPath("$PROJECT_ROOT")
    public class Member_properties {
        @Test
        public void testAllFilesPresentInMember_properties() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/member-properties"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/member-properties-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Member_properties_in_exported_file {
        @Test
        public void testAllFilesPresentInMember_properties_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/member-properties-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/methods")
    @TestDataPath("$PROJECT_ROOT")
    public class Methods {
        @Test
        public void testAllFilesPresentInMethods() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/methods"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/methods-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Methods_in_exported_file {
        @Test
        public void testAllFilesPresentInMethods_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/methods-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/moduleSystems")
    @TestDataPath("$PROJECT_ROOT")
    public class ModuleSystems {
        @Test
        public void testAllFilesPresentInModuleSystems() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/moduleSystems"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("commonjs.kt")
        public void testCommonjs() throws Exception {
            runTest("js/js.translator/testData/typescript-export/moduleSystems/commonjs.kt");
        }

        @Test
        @TestMetadata("plain.kt")
        public void testPlain() throws Exception {
            runTest("js/js.translator/testData/typescript-export/moduleSystems/plain.kt");
        }

        @Test
        @TestMetadata("umd.kt")
        public void testUmd() throws Exception {
            runTest("js/js.translator/testData/typescript-export/moduleSystems/umd.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/namespaces")
    @TestDataPath("$PROJECT_ROOT")
    public class Namespaces {
        @Test
        public void testAllFilesPresentInNamespaces() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/namespaces"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("namespaces.kt")
        public void testNamespaces() throws Exception {
            runTest("js/js.translator/testData/typescript-export/namespaces/namespaces.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/namespaces-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Namespaces_in_exported_file {
        @Test
        public void testAllFilesPresentInNamespaces_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/namespaces-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/not-exported-declarations")
    @TestDataPath("$PROJECT_ROOT")
    public class Not_exported_declarations {
        @Test
        public void testAllFilesPresentInNot_exported_declarations() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/not-exported-declarations"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/not-exported-declarations-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Not_exported_declarations_in_exported_file {
        @Test
        public void testAllFilesPresentInNot_exported_declarations_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/not-exported-declarations-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/objects")
    @TestDataPath("$PROJECT_ROOT")
    public class Objects {
        @Test
        public void testAllFilesPresentInObjects() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/objects"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/objects-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Objects_in_exported_file {
        @Test
        public void testAllFilesPresentInObjects_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/objects-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/primitives")
    @TestDataPath("$PROJECT_ROOT")
    public class Primitives {
        @Test
        public void testAllFilesPresentInPrimitives() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/primitives"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("primitives.kt")
        public void testPrimitives() throws Exception {
            runTest("js/js.translator/testData/typescript-export/primitives/primitives.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/primitives-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Primitives_in_exported_file {
        @Test
        public void testAllFilesPresentInPrimitives_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/primitives-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/properties")
    @TestDataPath("$PROJECT_ROOT")
    public class Properties {
        @Test
        public void testAllFilesPresentInProperties() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/properties"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/properties-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Properties_in_exported_file {
        @Test
        public void testAllFilesPresentInProperties_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/properties-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/regular-classes")
    @TestDataPath("$PROJECT_ROOT")
    public class Regular_classes {
        @Test
        public void testAllFilesPresentInRegular_classes() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/regular-classes"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/regular-classes-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Regular_classes_in_exported_file {
        @Test
        public void testAllFilesPresentInRegular_classes_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/regular-classes-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/sealed-classes")
    @TestDataPath("$PROJECT_ROOT")
    public class Sealed_classes {
        @Test
        public void testAllFilesPresentInSealed_classes() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/sealed-classes"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/sealed-classes-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Sealed_classes_in_exported_file {
        @Test
        public void testAllFilesPresentInSealed_classes_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/sealed-classes-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/selectiveExport")
    @TestDataPath("$PROJECT_ROOT")
    public class SelectiveExport {
        @Test
        public void testAllFilesPresentInSelectiveExport() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/selectiveExport"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("selectiveExport.kt")
        public void testSelectiveExport() throws Exception {
            runTest("js/js.translator/testData/typescript-export/selectiveExport/selectiveExport.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/selective-export")
    @TestDataPath("$PROJECT_ROOT")
    public class Selective_export {
        @Test
        public void testAllFilesPresentInSelective_export() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/selective-export"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/strict-implicit-export")
    @TestDataPath("$PROJECT_ROOT")
    public class Strict_implicit_export {
        @Test
        public void testAllFilesPresentInStrict_implicit_export() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/strict-implicit-export"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/visibility")
    @TestDataPath("$PROJECT_ROOT")
    public class Visibility {
        @Test
        public void testAllFilesPresentInVisibility() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/visibility"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("visibility.kt")
        public void testVisibility() throws Exception {
            runTest("js/js.translator/testData/typescript-export/visibility/visibility.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/visibility-in-exported-file")
    @TestDataPath("$PROJECT_ROOT")
    public class Visibility_in_exported_file {
        @Test
        public void testAllFilesPresentInVisibility_in_exported_file() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/visibility-in-exported-file"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }
}
